name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [created]

permissions:
    contents: write
    packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'

    - name: Build
      run: go build -v ./...

  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v4
    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://go.dev/dl/go1.23.1.linux-amd64.tar.gz"
        project_path: "./cmd/client"
        binary_name: "client"
        extra_files: README.md

  test:
    runs-on: ubuntu-latest
    services:
      dind:
        image: docker:27.2.1-dind-rootless
        ports:
          - 2375:2375
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23.1'

    - name: Test with Docker
      run: go test -v ./...
          
